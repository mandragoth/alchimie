export func setupControls() {
    // 3D camera
    @Input.addAction("move_left_3d");
    @Input.addAction("move_right_3d");
    @Input.addAction("move_down_3d");
    @Input.addAction("move_up_3d");
    @Input.addAction("move_back_3d");
    @Input.addAction("move_forward_3d");
    @Input.addAction("turn_up");
    @Input.addAction("turn_down");
    @Input.addAction("turn_left");
    @Input.addAction("turn_right");

    // 2D camera
    @Input.addAction("move_left_2d");
    @Input.addAction("move_right_2d");
    @Input.addAction("move_down_2d");
    @Input.addAction("move_up_2d");
    @Input.addAction("roll_left_2d");
    @Input.addAction("roll_right_2d");
    @Input.addAction("zoom_in_2d");
    @Input.addAction("zoom_out_2d");

    // Exit
    @Input.addAction("exit");

    // Bones debug
    @Input.addAction("nextBone");
    @Input.addAction("previousBone");
    
    // 3D camera
    @Input.addActionEvent("move_left_3d", @InputEvent.controllerAxis(ControllerAxis.leftX, -1f));
    @Input.addActionEvent("move_left_3d", @InputEvent.controllerButton(ControllerButton.left, KeyState.pressed));
    @Input.addActionEvent("move_left_3d", @InputEvent.keyButton(KeyButton.left, KeyState.pressed));
    @Input.addActionEvent("move_left_3d", @InputEvent.keyButton(KeyButton.a, KeyState.pressed));

    @Input.addActionEvent("move_right_3d", @InputEvent.controllerAxis(ControllerAxis.leftX, 1f));
    @Input.addActionEvent("move_right_3d", @InputEvent.controllerButton(ControllerButton.right, KeyState.pressed));
    @Input.addActionEvent("move_right_3d", @InputEvent.keyButton(KeyButton.right, KeyState.pressed));
    @Input.addActionEvent("move_right_3d", @InputEvent.keyButton(KeyButton.d, KeyState.pressed));

    @Input.addActionEvent("move_down_3d", @InputEvent.controllerAxis(ControllerAxis.leftTrigger, 1f));
    @Input.addActionEvent("move_down_3d", @InputEvent.keyButton(KeyButton.leftShift, KeyState.pressed));

    @Input.addActionEvent("move_up_3d", @InputEvent.controllerAxis(ControllerAxis.rightTrigger, 1f));
    @Input.addActionEvent("move_up_3d", @InputEvent.keyButton(KeyButton.space, KeyState.pressed));

    @Input.addActionEvent("move_back_3d", @InputEvent.controllerAxis(ControllerAxis.leftY, 1f));
    @Input.addActionEvent("move_back_3d", @InputEvent.controllerButton(ControllerButton.down, KeyState.pressed));
    @Input.addActionEvent("move_back_3d", @InputEvent.keyButton(KeyButton.down, KeyState.pressed));
    @Input.addActionEvent("move_back_3d", @InputEvent.keyButton(KeyButton.s, KeyState.pressed));

    @Input.addActionEvent("move_forward_3d", @InputEvent.controllerAxis(ControllerAxis.leftY, -1f));
    @Input.addActionEvent("move_forward_3d", @InputEvent.controllerButton(ControllerButton.up, KeyState.pressed));
    @Input.addActionEvent("move_forward_3d", @InputEvent.keyButton(KeyButton.up, KeyState.pressed));
    @Input.addActionEvent("move_forward_3d", @InputEvent.keyButton(KeyButton.w, KeyState.pressed));

    @Input.addActionEvent("turn_up_3d", @InputEvent.controllerAxis(ControllerAxis.rightY, 1f));
    @Input.addActionEvent("turn_down_3d", @InputEvent.controllerAxis(ControllerAxis.rightY, -1f));
    @Input.addActionEvent("turn_left_3d", @InputEvent.controllerAxis(ControllerAxis.rightX, -1f));
    @Input.addActionEvent("turn_right_3d", @InputEvent.controllerAxis(ControllerAxis.rightX, 1f));

    // 2D camera controls (missing movement controller inputs)
    @Input.addActionEvent("move_left_2d", @InputEvent.keyButton(KeyButton.a, KeyState.pressed));
    @Input.addActionEvent("move_right_2d", @InputEvent.keyButton(KeyButton.d, KeyState.pressed));
    @Input.addActionEvent("move_down_2d", @InputEvent.keyButton(KeyButton.s, KeyState.pressed));
    @Input.addActionEvent("move_up_2d", @InputEvent.keyButton(KeyButton.w, KeyState.pressed));

    @Input.addActionEvent("roll_left_2d", @InputEvent.controllerButton(ControllerButton.leftShoulder, KeyState.pressed));
    @Input.addActionEvent("roll_left_2d", @InputEvent.keyButton(KeyButton.q, KeyState.pressed));

    @Input.addActionEvent("roll_right_2d", @InputEvent.controllerButton(ControllerButton.rightShoulder, KeyState.pressed));
    @Input.addActionEvent("roll_right_2d", @InputEvent.keyButton(KeyButton.e, KeyState.pressed));

    @Input.addActionEvent("zoom_in_2d", @InputEvent.keyButton(KeyButton.numPlus, KeyState.pressed));
    @Input.addActionEvent("zoom_in_2d", @InputEvent.mouseWheel(0, -1));

    @Input.addActionEvent("zoom_out_2d", @InputEvent.keyButton(KeyButton.numMinus, KeyState.pressed));
    @Input.addActionEvent("zoom_out_2d", @InputEvent.mouseWheel(0, 1));

    // Exit
    @Input.addActionEvent("exit", @InputEvent.controllerButton(ControllerButton.start, KeyState.pressed));
    @Input.addActionEvent("exit", @InputEvent.keyButton(KeyButton.escape, KeyState.pressed));

    /*if(isActionActivated("exit")) {
        @App.close();
    }*/

    // Bones debug
    @Input.addActionEvent("previous_bone", @InputEvent.keyButton(KeyButton.f1, KeyState.down));
    @Input.addActionEvent("next_bone", @InputEvent.keyButton(KeyButton.f2, KeyState.down));
}

export var mouseX : int;
export var mouseY : int;
/*
event input(input: InputEvent) {
    switch(input.type)
    case(InputEventType.mouseMotion) {
        var input = input.mouseMotion?;
        mouseX = input.relativeX;
        mouseY = input.relativeY;
    }

    if (isActionActivated("exit")) {
        exit;
    }
}*/