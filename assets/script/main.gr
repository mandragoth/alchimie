import "cam.gr"

func randf() (float) {
    return rand(-1f, 1f);
}

event onLoad() {
    setupCamera();
    yield;
    runtime();
    testUI();
}

task runtime() {
    var remilia = @Sprite("remilia", @vec4i(0, 0, 32, 48));
    remilia:position2D(@vec2(12.5f, 0f));

    var remilia2 = @Sprite("remilia", @vec4i(96, 48, 32, 48));
    remilia2:position2D(@vec2(12.5f + 32f, 0f));

    var skybox = @Skybox("");

    var light = @Light(LightType.spot);
    light:position(@vec3(0f, 5f, 0f));

    //var quad = @Quad();

    var jupiter = @Model("jupiter");
    jupiter:position(@vec3(1f, 0f, 1f));
    jupiter:scale(@vec3(0.05f, 0.05f, 0.05f));

    loop yield {
        clear();

        setup3D();

        skybox:draw();
        jupiter:applyLight(light);
        jupiter:draw();
        light:draw();
        //quad:draw();

        setup2D();

        drawFilledRect(@vec2(0f, 0f), @vec2(50f, 50f), @color(1f, 0f, 0f));
        //drawFilledCircle(@vec2(25f, 25f), 50f, @color(0f, 1f, 0f));
        remilia:draw();
        remilia2:draw();

        render();
    }
}

func testUI() {
    var label = @Label("Hello World !");
    label.pos(200f, 200f);
    label.align(AlignX.right, AlignY.top);
    appendUI(label);

    var state = @UIState("hidden");
    state.time = .25;
    state.time += 2f;
    state.spline = Spline.sineInOut;
    state.alpha = .0;
    state.offsetX = -100f;
    state.angle = rad(45.0);
    label.addState(state);

    sleep(2.seconds);
    label.runState("hidden");
}